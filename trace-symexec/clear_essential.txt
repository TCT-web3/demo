This trace contains the essential part of the multiVulnToken.clear(_to) call from the no_reentrancy_attack contract in https://github.com/TCT-web3/demo/blob/main/trace-symexec/MultiVulnToken.sol. 
At the starting point of the trace, all arguments are on the top of the stack

stack
[
	"0x00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f",      // _to address
	"0x00000000000000000000000000000000000000000000000000000000000000bd",
	"0x000000000000000000000000000000000000000000000000000000003d0a4061"       // function hash for "clear(address)"
]
======================================Begin==========================================
>>enter 0x5c9eb5d6a6c2c1b3efc52255c0b356f116f6f66d::0x3d0a4061   ("MultiVulnToken"::"clear(address)")
// ... omitting the unessential part ...
0188 JUMP - LINE 53


0465 JUMPDEST -
0466 PUSH1 00 - LINE 55
0468 PUSH1 02 - LINE 55
0470 PUSH1 00 - LINE 55
0472 CALLER - LINE 55
0473 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 55
0494 AND - LINE 55
0495 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 55
0516 AND - LINE 55
0517 DUP2 - LINE 55
0518 MSTORE - LINE 55
0519 PUSH1 20 - LINE 55
0521 ADD - LINE 55
0522 SWAP1 - LINE 55
0523 DUP2 - LINE 55
0524 MSTORE - LINE 55
0525 PUSH1 20 - LINE 55
0527 ADD - LINE 55
0528 PUSH1 00 - LINE 55
0530 SHA3 - LINE 55
0531 SLOAD - LINE 55
0532 SWAP1 - LINE 55
0533 POP - LINE 55
0534 DUP2 - LINE 56
0535 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 56
0556 AND - LINE 56
0557 CALLER - LINE 56
0558 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 56
0579 AND - LINE 56
0580 SUB - LINE 56
0581 PUSH2 024d - LINE 56
0584 JUMPI - LINE 56

0589 JUMPDEST -
0590 DUP1 - LINE 57
0591 PUSH1 02 - LINE 57
0593 PUSH1 00 - LINE 57
0595 DUP5 - LINE 57
0596 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 57
0617 AND - LINE 57
0618 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 57
0639 AND - LINE 57
0640 DUP2 - LINE 57
0641 MSTORE - LINE 57
0642 PUSH1 20 - LINE 57
0644 ADD - LINE 57
0645 SWAP1 - LINE 57
0646 DUP2 - LINE 57
0647 MSTORE - LINE 57
0648 PUSH1 20 - LINE 57
0650 ADD - LINE 57
0651 PUSH1 00 - LINE 57
0653 SHA3 - LINE 57
0654 PUSH1 00 - LINE 57
0656 DUP3 - LINE 57
0657 DUP3 - LINE 57
0658 SLOAD - LINE 57
0659 ADD - LINE 57
0660 SWAP3 - LINE 57
0661 POP - LINE 57
0662 POP - LINE 57
0663 DUP2 - LINE 57
0664 SWAP1 - LINE 57
0665 SSTORE - LINE 57
0666 POP - LINE 57
0667 PUSH1 00 -
0669 CALLER - LINE 59
0670 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 59
0691 AND - LINE 59
0692 DUP3 - LINE 60
0693 PUSH1 40 - LINE 60
0695 MLOAD - LINE 60
0696 PUSH1 24 - LINE 60
0698 ADD - LINE 60
0699 PUSH2 02c4 - LINE 60
0702 SWAP2 - LINE 60
0703 SWAP1 - LINE 60
0704 PUSH2 0781 - LINE 60
0707 JUMP - LINE 60      call

1921 JUMPDEST - LINE 60
1922 PUSH1 00 - LINE 60
1924 PUSH1 20 - LINE 60
1926 DUP3 - LINE 60
1927 ADD - LINE 60
1928 SWAP1 - LINE 60
1929 POP - LINE 60
1930 PUSH2 0796 - LINE 60
1933 PUSH1 00 - LINE 60
1935 DUP4 - LINE 60
1936 ADD - LINE 60
1937 DUP5 - LINE 60
1938 PUSH2 0772 - LINE 60
1941 JUMP - LINE 60      call

1906 JUMPDEST - LINE 60
1907 PUSH2 077b - LINE 60
1910 DUP2 - LINE 60
1911 PUSH2 0768 - LINE 60
1914 JUMP - LINE 60     call

1896 JUMPDEST - LINE 60
1897 PUSH1 00 - LINE 60
1899 DUP2 - LINE 60
1900 SWAP1 - LINE 60
1901 POP - LINE 60
1902 SWAP2 - LINE 60
1903 SWAP1 - LINE 60
1904 POP - LINE 60
1905 JUMP - LINE 60     return

1915 JUMPDEST - LINE 60
1916 DUP3 - LINE 60
1917 MSTORE - LINE 60
1918 POP - LINE 60
1919 POP - LINE 60
1920 JUMP - LINE 60     return

1942 JUMPDEST - LINE 60
1943 SWAP3 - LINE 60
1944 SWAP2 - LINE 60
1945 POP - LINE 60
1946 POP - LINE 60
1947 JUMP - LINE 60     return

0708 JUMPDEST - LINE 60
0709 PUSH1 40 - LINE 60
0711 MLOAD - LINE 60
0712 PUSH1 20 - LINE 60
0714 DUP2 - LINE 60
0715 DUP4 - LINE 60
0716 SUB - LINE 60
0717 SUB - LINE 60
0718 DUP2 - LINE 60
0719 MSTORE - LINE 60
0720 SWAP1 - LINE 60
0721 PUSH1 40 - LINE 60
0723 MSTORE - LINE 60
0724 PUSH32 85892c2400000000000000000000000000000000000000000000000000000000 - LINE 60
0757 PUSH28 ffffffffffffffffffffffffffffffffffffffffffffffffffffffff - LINE 60
0786 NOT - LINE 60
0787 AND - LINE 60
0788 PUSH1 20 - LINE 60
0790 DUP3 - LINE 60
0791 ADD - LINE 60
0792 DUP1 - LINE 60
0793 MLOAD - LINE 60
0794 PUSH28 ffffffffffffffffffffffffffffffffffffffffffffffffffffffff - LINE 60
0823 DUP4 - LINE 60
0824 DUP2 - LINE 60
0825 DUP4 - LINE 60
0826 AND - LINE 60
0827 OR - LINE 60
0828 DUP4 - LINE 60
0829 MSTORE - LINE 60
0830 POP - LINE 60
0831 POP - LINE 60
0832 POP - LINE 60
0833 POP - LINE 60
0834 PUSH1 40 - LINE 60
0836 MLOAD - LINE 60
0837 PUSH2 034e - LINE 60
0840 SWAP2 - LINE 60
0841 SWAP1 - LINE 60
0842 PUSH2 09c6 - LINE 60
0845 JUMP - LINE 60       call

2502 JUMPDEST - LINE 60
2503 PUSH1 00 - LINE 60
2505 PUSH2 09d2 - LINE 60
2508 DUP3 - LINE 60
2509 DUP5 - LINE 60
2510 PUSH2 0995 - LINE 60
2513 JUMP - LINE 60     call

2453 JUMPDEST - LINE 60
2454 PUSH1 00 - LINE 60
2456 PUSH2 09a0 - LINE 60
2459 DUP3 - LINE 60
2460 PUSH2 097f - LINE 60
2463 JUMP - LINE 60      

2431 JUMPDEST - LINE 60
2432 PUSH1 00 - LINE 60
2434 DUP2 - LINE 60
2435 MLOAD - LINE 60
2436 SWAP1 - LINE 60
2437 POP - LINE 60
2438 SWAP2 - LINE 60
2439 SWAP1 - LINE 60
2440 POP - LINE 60
2441 JUMP - LINE 60      

2464 JUMPDEST - LINE 60
2465 PUSH2 09aa - LINE 60
2468 DUP2 - LINE 60
2469 DUP6 - LINE 60
2470 PUSH2 098a - LINE 60
2473 JUMP - LINE 60     

2442 JUMPDEST - LINE 60
2443 PUSH1 00 - LINE 60
2445 DUP2 - LINE 60
2446 SWAP1 - LINE 60
2447 POP - LINE 60
2448 SWAP3 - LINE 60
2449 SWAP2 - LINE 60
2450 POP - LINE 60
2451 POP - LINE 60
2452 JUMP - LINE 60 

2474 JUMPDEST - LINE 60
2475 SWAP4 - LINE 60
2476 POP - LINE 60
2477 PUSH2 09ba - LINE 60
2480 DUP2 - LINE 60
2481 DUP6 - LINE 60
2482 PUSH1 20 - LINE 60
2484 DUP7 - LINE 60
2485 ADD - LINE 60
2486 PUSH2 06d2 - LINE 60
2489 JUMP - LINE 60        call

1746 JUMPDEST - LINE 60    start a loop
1747 PUSH1 00 - LINE 60
1749 JUMPDEST - LINE 60    loop back destination
1750 DUP4 - LINE 60
1751 DUP2 - LINE 60
1752 LT - LINE 60
1753 ISZERO - LINE 60
1754 PUSH2 06f0 - LINE 60
1757 JUMPI - LINE 60       branch not taken

1758 DUP1 - LINE 60
1759 DUP3 - LINE 60
1760 ADD - LINE 60
1761 MLOAD - LINE 60
1762 DUP2 - LINE 60
1763 DUP5 - LINE 60
1764 ADD - LINE 60
1765 MSTORE - LINE 60
1766 PUSH1 20 - LINE 60
1768 DUP2 - LINE 60
1769 ADD - LINE 60
1770 SWAP1 - LINE 60
1771 POP - LINE 60
1772 PUSH2 06d5 - LINE 60
1775 JUMP - LINE 60

1749 JUMPDEST - LINE 60      loop back destination
1750 DUP4 - LINE 60
1751 DUP2 - LINE 60
1752 LT - LINE 60
1753 ISZERO - LINE 60
1754 PUSH2 06f0 - LINE 60
1757 JUMPI - LINE 60        branch not taken

1758 DUP1 - LINE 60
1759 DUP3 - LINE 60
1760 ADD - LINE 60
1761 MLOAD - LINE 60
1762 DUP2 - LINE 60
1763 DUP5 - LINE 60
1764 ADD - LINE 60
1765 MSTORE - LINE 60
1766 PUSH1 20 - LINE 60
1768 DUP2 - LINE 60
1769 ADD - LINE 60
1770 SWAP1 - LINE 60
1771 POP - LINE 60
1772 PUSH2 06d5 - LINE 60
1775 JUMP - LINE 60

1749 JUMPDEST - LINE 60
1750 DUP4 - LINE 60
1751 DUP2 - LINE 60
1752 LT - LINE 60
1753 ISZERO - LINE 60
1754 PUSH2 06f0 - LINE 60
1757 JUMPI - LINE 60      branch taken (exiting loop)

1776 JUMPDEST - LINE 60
1777 PUSH1 00 - LINE 60
1779 DUP5 - LINE 60
1780 DUP5 - LINE 60
1781 ADD - LINE 60
1782 MSTORE - LINE 60
1783 POP - LINE 60
1784 POP - LINE 60
1785 POP - LINE 60
1786 POP - LINE 60
1787 JUMP - LINE 60   return

2490 JUMPDEST - LINE 60
2491 DUP1 - LINE 60
2492 DUP5 - LINE 60
2493 ADD - LINE 60
2494 SWAP2 - LINE 60
2495 POP - LINE 60
2496 POP - LINE 60
2497 SWAP3 - LINE 60
2498 SWAP2 - LINE 60
2499 POP - LINE 60
2500 POP - LINE 60
2501 JUMP - LINE 60

2514 JUMPDEST - LINE 60
2515 SWAP2 - LINE 60
2516 POP - LINE 60
2517 DUP2 - LINE 60
2518 SWAP1 - LINE 60
2519 POP - LINE 60
2520 SWAP3 - LINE 60
2521 SWAP2 - LINE 60
2522 POP - LINE 60
2523 POP - LINE 60
2524 JUMP - LINE 60    return

0846 JUMPDEST - LINE 59
0847 PUSH1 00 - LINE 59
0849 PUSH1 40 - LINE 59
0851 MLOAD - LINE 59
0852 DUP1 - LINE 59
0853 DUP4 - LINE 59
0854 SUB - LINE 59
0855 DUP2 - LINE 59
0856 PUSH1 00 - LINE 59
0858 DUP7 - LINE 59
0859 GAS - LINE 59
0860 CALL - LINE 59    external call !!!

>>enter 0x73d5596f97950f1048b251e3e3ee5ab888d76d37::0x85892c24 ("no_reentrancy_attack"::"receiveNotification(uint256)")
// ... omitting the unessential part ...
125 JUMP - LINE 97

174 JUMPDEST - LINE 97     174 is the entry point of receiveNotification
175 POP - LINE 97
176 JUMP - LINE 97

126 JUMPDEST - LINE 97
127 STOP - LINE 97
<<leave

0861 SWAP2 - LINE 59
0862 POP - LINE 59
0863 POP - LINE 59
0864 RETURNDATASIZE - LINE 59
0865 DUP1 - LINE 59
0866 PUSH1 00 - LINE 59
0868 DUP2 - LINE 59
0869 EQ - LINE 59
0870 PUSH2 038b - LINE 59
0873 JUMPI - LINE 59

0907 JUMPDEST - LINE 59
0908 PUSH1 60 - LINE 59
0910 SWAP2 - LINE 59
0911 POP - LINE 59
0912 JUMPDEST - LINE 59
0913 POP - LINE 59
0914 POP - LINE 59
0915 DUP1 - LINE 59
0916 SWAP2 - LINE 59
0917 POP - LINE 59
0918 POP - LINE 59
0919 DUP1 -
0920 PUSH2 03a0 -
0923 JUMPI -

0928 JUMPDEST -
0929 PUSH1 00 - LINE 63
0931 PUSH1 02 - LINE 63
0933 PUSH1 00 - LINE 63
0935 CALLER - LINE 63
0936 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 63
0957 AND - LINE 63
0958 PUSH20 ffffffffffffffffffffffffffffffffffffffff - LINE 63
0979 AND - LINE 63
0980 DUP2 - LINE 63
0981 MSTORE - LINE 63
0982 PUSH1 20 - LINE 63
0984 ADD - LINE 63
0985 SWAP1 - LINE 63
0986 DUP2 - LINE 63
0987 MSTORE - LINE 63
0988 PUSH1 20 - LINE 63
0990 ADD - LINE 63
0991 PUSH1 00 - LINE 63
0993 SHA3 - LINE 63
0994 DUP2 - LINE 63
0995 SWAP1 - LINE 63
0996 SSTORE - LINE 63
0997 POP - LINE 63
0998 POP - LINE 63
0999 POP - LINE 63
1000 POP - LINE 63
1001 JUMP - LINE 63

0189 JUMPDEST - LINE 59
0190 STOP - LINE 59
<<leave
======================================End==========================================
When the external call is about to be executed:

memory is
{
	"0x0": "00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f",
	"0x20": "0000000000000000000000000000000000000000000000000000000000000002",
	"0x40": "00000000000000000000000000000000000000000000000000000000000000c4",
	"0x60": "0000000000000000000000000000000000000000000000000000000000000000",
	"0x80": "0000000000000000000000000000000000000000000000000000000000000024",
	"0xa0": "85892c2400000000000000000000000000000000000000000000000000000000",
	"0xc0": "0000000585892c24000000000000000000000000000000000000000000000000",
	"0xe0": "0000000000000005000000000000000000000000000000000000000000000000",
	"0x100": "0000000000000000000000000000000000000000000000000000000000000000"
}

stack is[
	"0x000000000000000000000000000000000000000000000000000000000000430e",
	"0x00000000000000000000000073d5596f97950f1048b251e3e3ee5ab888d76d37",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x00000000000000000000000000000000000000000000000000000000000000c4",
	"0x0000000000000000000000000000000000000000000000000000000000000024",
	"0x00000000000000000000000000000000000000000000000000000000000000c4",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x00000000000000000000000000000000000000000000000000000000000000e8",
	"0x00000000000000000000000073d5596f97950f1048b251e3e3ee5ab888d76d37",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x0000000000000000000000000000000000000000000000000000000000000005",
	"0x00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f",
	"0x00000000000000000000000000000000000000000000000000000000000000bd",
	"0x000000000000000000000000000000000000000000000000000000003d0a4061"
]

The CALL instruction does the following:
    It calls contract 0x73d5596f97950f1048b251e3e3ee5ab888d76d37 with calldata copied 
	from memory[0xc4, 0xc4+0x24), which is "85892c24000000000000000000000000000000000
	0000000000000000000000000000005"


