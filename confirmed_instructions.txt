trace-addLiquidityNew

correct:
1063    10173 JUMPDEST -
1198    10117 JUMPDEST -   pair = IUniswapV2Factory(factory).getPair(tokenA, tokenB);
1297    3923 JUMPDEST -    pair = IUniswapV2Factory(factory).getPair(tokenA, tokenB);   This is the JUMPDEST right before staticcall
1676    10158 JUMPDEST     pair = IUniswapV2Factory(factory).getPair(tokenA, tokenB);
1843    496   JUMPDEST     _reserve0 = reserve0;    //in Pair::getReserves

incorrect:
1676   10158 JUMPDEST     pair = IUniswapV2Factory(factory).getPair(tokenA, tokenB);
1715   6995 JUMPDEST    IUniswapV2Factory(factory).getPair(tokenA, tokenB)   in Factory::pairFor
1747   6348 Jumpdest    pairFor(factory, tokenA, tokenB)    in Factory::getReserves (stack is incorrect)
1772   6405 staticcall
1993   11249  JUMPDEST  pairFor(factory, tokenA, tokenB)   in Factory::getReserves (stack is correct)
2017   8972 MLOAD    (stack is correct)
2366   9876 JUMPI -


======================================================
correct:
1239  (3886, 'SHL', None)
1253  (10206, 'JUMPDEST', None) 
1353  (6985, 'JUMPDEST', None)
2752  (3906, 'JUMPDEST', None)
2770  (3928, 'SHA3', None)
2782  (10457 JUMPDEST)
2891  (10158)  

incorrect:
2824  (10469, 'JUMPDEST', None)
2874  (10147, 'JUMPDEST', None)
(4126, 'CALL', None)
    missing call data, key error starts at 0x302 no data:
    memory handle_OR issue
    0x31e :  Partial32B((28, 31),msg.sender)
    0x322 :  Partial32B((0, 23),0xdeadbeef)
    0x33e :  Partial32B((28, 31),0xdeadbeef)
    0x342 :  Partial32B((0, 23),amountADesired)
sqrt start point:
6654 (9738, 'JUMPDEST', None)

(6516, 'DUP1', None)
2366 (9876, 'JUMPI', None)
	stack correct
	do not need to boogie gen when traversing blockTimestampLast 7d0 --- amountADesired

MSTORE 1063 10173
pre		post
5734	7956
7956(1)	7956(2)




AFTER 1285 (7956, 'MSTORE')
{
	"0x0": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x20": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x40": "00000000000000000000000000000000000000000000000000000000000000a0\t??????????????????????????????? ",
	"0x60": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x80": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0xa0": "e6a43905000000000000000000000000194146544073844dfda12790823243f9\t??9??????????????AFT?s?M?????2C?",
	"0xc0": "54f1a2d20000000000000000000000006a71ab92bb603b42169f82cf753808b2\tT???????????????jq?????B????u8??",
	"0xe0": "8134991100000000000000000000000000000000000000000000000000000000\t?4??????????????????????????????"
}

AFTER (3975, 'MSTORE')
{
	"0x0": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x20": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x40": "00000000000000000000000000000000000000000000000000000000000000c0\t????????????????????????????????",
	"0x60": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x80": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0xa0": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0xc0": "54f1a2d20000000000000000000000006a71ab92bb603b42169f82cf753808b2\tT???????????????jq?????B????u8??",
	"0xe0": "8134991100000000000000000000000000000000000000000000000000000000\t?4??????????????????????????????"
}


1746 -- 3996 JUMP (Router)
1771 -- 6405 STATICCALL (Pair: getReserves())
3027 -- 3996 JUMP (Router)


(4141, 'CALL', None)
	stack correct
	memory wrong key error 0x208
	mem[0x204] partial32b (24, 19)?

4141 before memory
{
	"0x0": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x20": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x40": "00000000000000000000000000000000000000000000000000000000000001c4\t????????????????????????????????",
	"0x60": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x80": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0xa0": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0xc0": "00000000000000000000000000000000000000000000000000000000000007d0\t????????????????????????????????",
	"0xe0": "00000000000000000000000000000000000000000000000000000000000003e8\t????????????????????????????????",
	"0x100": "0000000000000000000000000000000000000000000000000000000064b6cd38\t????????????????????????????d??8",
	"0x120": "00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f\t????????????a???????????9?S?????",
	"0x140": "0000000000000000000000000000000000000000000000000000000000000064\t???????????????????????????????d",
	"0x160": "23b872dd000000000000000000000000f8e81d47203a594245e36c48e151709f\t??r????????????????G ?YBE?lH?Qp?",
	"0x180": "0c19fbe800000000000000000000000061d01af89b902f00efc4b31d398153f9\t\f???????????????a???????????9?S?",
	"0x1a0": "a8d9260f00000000000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x1c0": "000007d023b872dd000000000000000000000000f8e81d47203a594245e36c48\t??????r????????????????G ?YBE?lH",
	"0x1e0": "e151709f0c19fbe800000000000000000000000061d01af89b902f00efc4b31d\t?Qp?\f???????????????a???????????",
	"0x200": "398153f9a8d9260f000000000000000000000000000000000000000000000000\t9?S?????????????????????????????",
	"0x220": "00000000000007d0000000000000000000000000000000000000000000000000\t????????????????????????????????",
	"0x240": "0000000000000000000000000000000000000000000000000000000000000000\t????????????????????????????????"
}
4141 before stack
[
	"0x000000000000000000000000000000000000000000000000000000000001bd90",
	"0x000000000000000000000000194146544073844dfda12790823243f954f1a2d2",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x00000000000000000000000000000000000000000000000000000000000001c4",
	"0x0000000000000000000000000000000000000000000000000000000000000064",
	"0x00000000000000000000000000000000000000000000000000000000000001c4",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x0000000000000000000000000000000000000000000000000000000000000228",
	"0x000000000000000000000000194146544073844dfda12790823243f954f1a2d2",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x00000000000000000000000000000000000000000000000000000000000007d0",
	"0x00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f",
	"0x000000000000000000000000f8e81d47203a594245e36c48e151709f0c19fbe8",
	"0x000000000000000000000000194146544073844dfda12790823243f954f1a2d2",
	"0x0000000000000000000000000000000000000000000000000000000000000a39",
	"0x00000000000000000000000061d01af89b902f00efc4b31d398153f9a8d9260f",
	"0x0000000000000000000000000000000000000000000000000000000000000000",
	"0x00000000000000000000000000000000000000000000000000000000000003e8",
	"0x00000000000000000000000000000000000000000000000000000000000007d0",
	"0x000000000000000000000000f8e81d47203a594245e36c48e151709f0c19fbe8",
	"0x00000000000000000000000000000000000000000000000000000000000003e8",
	"0x00000000000000000000000000000000000000000000000000000000000007d0",
	"0x00000000000000000000000000000000000000000000000000000000000003e8",
	"0x00000000000000000000000000000000000000000000000000000000000007d0",
	"0x0000000000000000000000006a71ab92bb603b42169f82cf753808b281349911",
	"0x000000000000000000000000194146544073844dfda12790823243f954f1a2d2",
	"0x000000000000000000000000000000000000000000000000000000000000022c",
	"0x00000000000000000000000000000000000000000000000000000000ca3d6539"
]